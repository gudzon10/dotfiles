# PS1 bash prompt config
RED="\[\e[31m\]"
GREEN="\[\e[32m\]"
GREENBOLD="\[\e[1;32m\]"
BLUE="\[\e[34m\]"
BLUEBOLD="\[\e[1;34m\]"
ENDCOLOR="\[\e[0m\]"

NEW_LINE_SYMBOL=" "
# NEW_LINE_SYMBOL="->"
PROMPT_START="${GREENBOLD}\u@\h${ENDCOLOR}:${BLUEBOLD}\w${ENDCOLOR}"
PROMPT_END=" $\n${BLUEBOLD}${NEW_LINE_SYMBOL}${ENDCOLOR} "
PS1="${PROMPT_START}${PROMPT_END}"

# bash-git-prompt https://github.com/magicmonty/bash-git-prompt.git
# git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1
# Надо проверять установку всех скриптов, и инсталлировать их, если отсутствуют.
GIT_PROMPT_THEME=Single_line_NoExitState_Gentoo
GIT_PROMPT_START="${PROMPT_START}"
GIT_PROMPT_END="${PROMPT_END}"
if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
    GIT_PROMPT_ONLY_IN_REPO=1
    source $HOME/.bash-git-prompt/gitprompt.sh
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Self-added usable aliases
alias dc='docker compose'
alias clip='xclip -selection clipboard'
alias lls='ls --time-style=+"%d.%m.%Y %H:%M" -hAlFSr --color=auto'
alias ll='ls --time-style=+"%d.%m.%Y %H:%M" -hAlFtr --color=auto'
alias ls='ls -F --group-directories-first --color=auto'
alias allupdate='sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y && flatpak update -y'
alias glog="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

dus () {
    if [ $# -gt 1 ]; then
        depth=$2
    else
        depth=1
    fi

    du -bah --max-depth=$depth $1 | sort -h
}

shistory () {
    history|awk '{print $2}'|awk 'BEGIN {FS="|"} {print $1}'|sort|uniq -c|sort -rn|head -30
}

s2history () {
    history|awk '{print $2,$3}'|awk 'BEGIN {FS="|"} {print $1,$2}'|sort|uniq -c|sort -rn|head -30
}


### Bash history block conf
shopt -s histappend
shopt -s checkwinsize
shopt -s cdspell
shopt -s cmdhist
HISTSIZE=5000
HISTFILESIZE=5000
HISTCONTROL=ignoreboth:erasedups
HISTIGNORE="ls"

if [ -z "$PROMPT_COMMAND" ]
then
    PROMPT_COMMAND="history -a"
else
    # TODO: при каждом source ~/.bashrc добавляет history. Исправить.
    PROMPT_COMMAND="$PROMPT_COMMAND; history -a"
fi

#eval "$(starship init bash)"
#
#function blastoff(){
#    history -a
#}
#starship_precmd_user_func="blastoff"
